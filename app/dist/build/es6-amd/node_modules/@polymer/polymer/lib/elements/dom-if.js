define(["exports","../../polymer-element.js","../utils/debounce.js","../utils/flush.js","../utils/async.js","../utils/path.js","../utils/wrap.js","../utils/hide-template-controls.js","../utils/settings.js","../utils/templatize.js"],(function(_exports,_polymerElement,_debounce,_flush,_async,_path,_wrap,_hideTemplateControls,_settings,_templatize){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DomIf=void 0;
/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
class DomIfBase extends _polymerElement.PolymerElement{static get is(){return"dom-if"}static get template(){return null}static get properties(){return{if:{type:Boolean,observer:"__debounceRender"},restamp:{type:Boolean,observer:"__debounceRender"},notifyDomChange:{type:Boolean}}}constructor(){super(),this.__renderDebouncer=null,this._lastIf=!1,this.__hideTemplateChildren__=!1,this.__template,this._templateInfo}__debounceRender(){this.__renderDebouncer=_debounce.Debouncer.debounce(this.__renderDebouncer,_async.microTask,()=>this.__render()),(0,_flush.enqueueDebouncer)(this.__renderDebouncer)}disconnectedCallback(){super.disconnectedCallback();const parent=(0,_wrap.wrap)(this).parentNode;parent&&(parent.nodeType!=Node.DOCUMENT_FRAGMENT_NODE||(0,_wrap.wrap)(parent).host)||this.__teardownInstance()}connectedCallback(){super.connectedCallback(),(0,_hideTemplateControls.hideElementsGlobally)()||(this.style.display="none"),this.if&&this.__debounceRender()}__ensureTemplate(){if(!this.__template){const thisAsTemplate=this;let template=thisAsTemplate._templateInfo?thisAsTemplate:(0,_wrap.wrap)(thisAsTemplate).querySelector("template");if(!template){let observer=new MutationObserver(()=>{if(!(0,_wrap.wrap)(this).querySelector("template"))throw new Error("dom-if requires a <template> child");observer.disconnect(),this.__render()});return observer.observe(this,{childList:!0}),!1}this.__template=template}return!0}__ensureInstance(){let parentNode=(0,_wrap.wrap)(this).parentNode;if(this.__hasInstance()){let children=this.__getInstanceNodes();if(children&&children.length){if((0,_wrap.wrap)(this).previousSibling!==children[children.length-1])for(let n,i=0;i<children.length&&(n=children[i]);i++)(0,_wrap.wrap)(parentNode).insertBefore(n,this)}}else{if(!parentNode)return!1;if(!this.__ensureTemplate())return!1;this.__createAndInsertInstance(parentNode)}return!0}render(){(0,_flush.flush)()}__render(){if(this.if){if(!this.__ensureInstance())return}else this.restamp&&this.__teardownInstance();this._showHideChildren(),_settings.suppressTemplateNotifications&&!this.notifyDomChange||this.if==this._lastIf||(this.dispatchEvent(new CustomEvent("dom-change",{bubbles:!0,composed:!0})),this._lastIf=this.if)}__hasInstance(){}__getInstanceNodes(){}__createAndInsertInstance(parentNode){}__teardownInstance(){}_showHideChildren(){}}const DomIf=_settings.fastDomIf?class DomIfFast extends DomIfBase{constructor(){super(),this.__instance=null,this.__syncInfo=null}__hasInstance(){return Boolean(this.__instance)}__getInstanceNodes(){return this.__instance.templateInfo.childNodes}__createAndInsertInstance(parentNode){const host=this.__dataHost||this;if(_settings.strictTemplatePolicy&&!this.__dataHost)throw new Error("strictTemplatePolicy: template owner not trusted");const templateInfo=host._bindTemplate(this.__template,!0);templateInfo.runEffects=(runEffects,changedProps,hasPaths)=>{let syncInfo=this.__syncInfo;if(this.if)syncInfo&&(this.__syncInfo=null,this._showHideChildren(),changedProps=Object.assign(syncInfo.changedProps,changedProps)),runEffects(changedProps,hasPaths);else if(this.__instance)if(syncInfo||(syncInfo=this.__syncInfo={runEffects:runEffects,changedProps:{}}),hasPaths)for(const p in changedProps){const rootProp=(0,_path.root)(p);syncInfo.changedProps[rootProp]=this.__dataHost[rootProp]}else Object.assign(syncInfo.changedProps,changedProps)},this.__instance=host._stampTemplate(this.__template,templateInfo),(0,_wrap.wrap)(parentNode).insertBefore(this.__instance,this)}__syncHostProperties(){const syncInfo=this.__syncInfo;syncInfo&&(this.__syncInfo=null,syncInfo.runEffects(syncInfo.changedProps,!1))}__teardownInstance(){const host=this.__dataHost||this;this.__instance&&(host._removeBoundDom(this.__instance),this.__instance=null,this.__syncInfo=null)}_showHideChildren(){const hidden=this.__hideTemplateChildren__||!this.if;this.__instance&&Boolean(this.__instance.__hidden)!==hidden&&(this.__instance.__hidden=hidden,(0,_templatize.showHideChildren)(hidden,this.__instance.templateInfo.childNodes)),hidden||this.__syncHostProperties()}}:class DomIfLegacy extends DomIfBase{constructor(){super(),this.__ctor=null,this.__instance=null,this.__invalidProps=null}__hasInstance(){return Boolean(this.__instance)}__getInstanceNodes(){return this.__instance.children}__createAndInsertInstance(parentNode){this.__ctor||(this.__ctor=(0,_templatize.templatize)(this.__template,this,{mutableData:!0,forwardHostProp:function(prop,value){this.__instance&&(this.if?this.__instance.forwardHostProp(prop,value):(this.__invalidProps=this.__invalidProps||Object.create(null),this.__invalidProps[(0,_path.root)(prop)]=!0))}})),this.__instance=new this.__ctor,(0,_wrap.wrap)(parentNode).insertBefore(this.__instance.root,this)}__teardownInstance(){if(this.__instance){let c$=this.__instance.children;if(c$&&c$.length){let parent=(0,_wrap.wrap)(c$[0]).parentNode;if(parent){parent=(0,_wrap.wrap)(parent);for(let n,i=0;i<c$.length&&(n=c$[i]);i++)parent.removeChild(n)}}this.__invalidProps=null,this.__instance=null}}__syncHostProperties(){let props=this.__invalidProps;if(props){this.__invalidProps=null;for(let prop in props)this.__instance._setPendingProperty(prop,this.__dataHost[prop]);this.__instance._flushProperties()}}_showHideChildren(){const hidden=this.__hideTemplateChildren__||!this.if;this.__instance&&Boolean(this.__instance.__hidden)!==hidden&&(this.__instance.__hidden=hidden,this.__instance._showHideChildren(hidden)),hidden||this.__syncHostProperties()}};_exports.DomIf=DomIf,customElements.define(DomIf.is,DomIf)}));