define(["exports","./element-mixin.js","../utils/mixin.js","../utils/wrap.js"],(function(_exports,_elementMixin,_mixin,_wrap){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DisableUpgradeMixin=_exports.findObservedAttributesGetter=void 0;
/**
   * @fileoverview
   * @suppress {checkPrototypalTypes}
   * @license Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   * This code may only be used under the BSD style license found at
   * http://polymer.github.io/LICENSE.txt The complete set of authors may be found
   * at http://polymer.github.io/AUTHORS.txt The complete set of contributors may
   * be found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by
   * Google as part of the polymer project is also subject to an additional IP
   * rights grant found at http://polymer.github.io/PATENTS.txt
   */
const findObservedAttributesGetter=ctor=>{for(;ctor;){const desc=Object.getOwnPropertyDescriptor(ctor,"observedAttributes");if(desc)return desc.get;ctor=Object.getPrototypeOf(ctor.prototype).constructor}return()=>[]};_exports.findObservedAttributesGetter=findObservedAttributesGetter;const DisableUpgradeMixin=(0,_mixin.dedupingMixin)(base=>{const superClass=(0,_elementMixin.ElementMixin)(base);let observedAttributesGetter=findObservedAttributesGetter(superClass);return class DisableUpgradeClass extends superClass{constructor(){super(),this.__isUpgradeDisabled}static get observedAttributes(){return observedAttributesGetter.call(this).concat("disable-upgrade")}_initializeProperties(){this.hasAttribute("disable-upgrade")?this.__isUpgradeDisabled=!0:super._initializeProperties()}_enableProperties(){this.__isUpgradeDisabled||super._enableProperties()}_canApplyPropertyDefault(property){return super._canApplyPropertyDefault(property)&&!(this.__isUpgradeDisabled&&this._isPropertyPending(property))}attributeChangedCallback(name,old,value,namespace){"disable-upgrade"==name?this.__isUpgradeDisabled&&null==value&&(super._initializeProperties(),this.__isUpgradeDisabled=!1,(0,_wrap.wrap)(this).isConnected&&super.connectedCallback()):super.attributeChangedCallback(name,old,value,namespace)}connectedCallback(){this.__isUpgradeDisabled||super.connectedCallback()}disconnectedCallback(){this.__isUpgradeDisabled||super.disconnectedCallback()}}});_exports.DisableUpgradeMixin=DisableUpgradeMixin}));