define(["exports","require","../../lit-element/lit-element.js","./lib/simple-fields-lite.js"],(function(_exports,_require,_litElement,_simpleFieldsLite){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleFields=void 0,_require=babelHelpers.interopRequireWildcard(_require);
/**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class SimpleFields extends _simpleFieldsLite.SimpleFieldsLite{static get styles(){return[...super.styles,_litElement.css`
        :host {
          display: block;
          --simple-picker-background-color: var(
            --simple-fields-background-color,
            white
          );
          --simple-picker-border-width: 0;
          --simple-picker-focus-border-width: 0;
          --simple-picker-display: block;
          --simple-picker-listbox-border-width: 1px;
          --simple-picker-listbox-outline: none;
        }

        :host([hidden]) {
          display: none;
        }
      `]}render(){return _litElement.html`
      <div id="schema-fields" aria-live="polite">
        <slot></slot>
      </div>
    `}static get haxProperties(){return{}}static get properties(){return{...super.properties,fields:{type:Array},schematizer:{type:Object,attribute:"schematizer"},label:{type:String},__activeTabs:{type:Object,attribute:"active-path"}}}static get tag(){return"simple-fields"}constructor(){super(),this.activeTabs={},this.addEventListener("active-tab-changed",this._handleActiveTab),setTimeout(()=>{new Promise((res,rej)=>_require.default(["./lib/simple-fields-field.js"],res,rej)),new Promise((res,rej)=>_require.default(["./lib/simple-fields-tabs.js"],res,rej)),new Promise((res,rej)=>_require.default(["./lib/simple-fields-code.js"],res,rej)),new Promise((res,rej)=>_require.default(["./lib/simple-fields-upload.js"],res,rej)),new Promise((res,rej)=>_require.default(["../simple-picker/simple-picker.js"],res,rej)),new Promise((res,rej)=>_require.default(["../simple-colors/lib/simple-colors-picker.js"],res,rej)),new Promise((res,rej)=>_require.default(["../simple-icon-picker/simple-icon-picker.js"],res,rej))},0)}get convertedSchema(){return{$schema:"http://json-schema.org/schema#",title:this.label,type:"object",required:[],properties:this.fieldsToSchema(this.fields)}}get schemaConversion(){return this.elementizer||{defaultSettings:{element:"simple-fields-field",errorProperty:"errorMessage",invalidProperty:"invalid",noWrap:!0,attributes:{type:"text"},properties:{minLength:"minlength",maxLength:"maxlength"}},format:{radio:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"radio"},properties:{options:"options"},child:{element:"simple-fields-array-item",noWrap:!0,descriptionProperty:"description",properties:{previewBy:"previewBy"}}}},select:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"select"},properties:{options:"options",items:"itemsList"}}},"simple-picker":{defaultSettings:{element:"simple-picker",attributes:{autofocus:!0},properties:{options:"options"}}}},type:{array:{defaultSettings:{element:"simple-fields-array",noWrap:!0,descriptionProperty:"description",child:{element:"simple-fields-array-item",noWrap:!0,descriptionProperty:"description",properties:{previewBy:"previewBy"}}}},boolean:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"checkbox",value:!1}}},file:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"file"},properties:{accepts:"accepts"}}},integer:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,step:1,type:"number"},properties:{minimum:"min",maximum:"max",multipleOf:"step"}}},markup:{defaultSettings:{element:"simple-fields-code",setValueProperty:"editorValue",noWrap:!0},format:{"md-block":{defaultSettings:{element:"md-block",setValueProperty:"source",noWrap:!0}}}},number:{defaultSettings:{element:"simple-fields-field",noWrap:!0,type:"number",attributes:{autofocus:!0,type:"number"},properties:{minimum:"min",maximum:"max",multipleOf:"step"}}},object:{defaultSettings:{element:"simple-fields-fieldset",noWrap:!0},format:{tabs:{defaultSettings:{element:"simple-fields-tabs",noWrap:!0,child:{element:"simple-fields-tab",noWrap:!0,labelSlot:"label",descriptionSlot:""},properties:{layoutBreakpoint:"layoutBreakpoint",iconBreakpoint:"iconBreakpoint",sticky:"sticky"}}},fields:{defaultSettings:{element:"simple-fields",noWrap:!0,descriptionProperty:"description",properties:{schema:"schema"}}}}},string:{format:{alt:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,required:!0}}},color:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"color"}}},colorpicker:{defaultSettings:{element:"simple-colors-picker",attributes:{autofocus:!0}}},date:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"date"}}},"date-time":{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"datetime-local"}}},date:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"date"}}},email:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"email"}}},fileupload:{defaultSettings:{element:"simple-fields-upload",noWrap:!0,attributes:{autofocus:!0}}},iconpicker:{defaultSettings:{element:"simple-icon-picker",attributes:{autofocus:!0}}},month:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"month"}}},textarea:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"textarea"}}},time:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"time"}}},uri:{defaultSettings:{element:"simple-fields-field",noWrap:!0,attributes:{autofocus:!0,type:"file"}}}}}}}}get fieldsConversion(){return this.schematizer||{defaultSettings:{type:"string"},format:{"simple-fields":{defaultSettings:{type:"object",format:"simple-fields"}}},inputMethod:{alt:{defaultSettings:{type:"string",format:"alt"}},array:{defaultSettings:{type:"array"},properties:{label:"itemLabel"}},boolean:{defaultSettings:{type:"boolean"}},code:{defaultSettings:{type:"markup"}},"code-editor":{defaultSettings:{type:"markup"}},color:{defaultSettings:{type:"string",format:"color"}},colorpicker:{defaultSettings:{type:"string",format:"colorpicker"}},"date-time":{defaultSettings:{type:"string",format:"date-time"}},datepicker:{defaultSettings:{type:"string",format:"date"}},fieldset:{defaultSettings:{type:"object"}},fileupload:{defaultSettings:{type:"string",format:"fileupload"}},haxupload:{defaultSettings:{type:"string",format:"fileupload"}},iconpicker:{defaultSettings:{type:"string",format:"iconpicker"}},markup:{defaultSettings:{type:"markup"}},"md-block":{defaultSettings:{type:"markup",format:"md-block"}},monthpicker:{defaultSettings:{type:"string",format:"month"}},number:{defaultSettings:{type:"number"}},object:{defaultSettings:{type:"object"}},select:{defaultSettings:{type:"string",format:"select"}},slider:{defaultSettings:{type:"number",format:"slider"}},tabs:{defaultSettings:{type:"object",format:"tabs"}},textarea:{defaultSettings:{type:"string",format:"textarea"}},timepicker:{defaultSettings:{type:"string",format:"time"}},weekpicker:{defaultSettings:{type:"string",format:"week"}}}}}updated(changedProperties){super.updated(changedProperties),changedProperties.forEach((oldValue,propName)=>{["fields","fieldsConversion"].includes(propName)&&(this.schema=this.convertedSchema),"__activeTabs"===propName&&this.activeTabs!==oldValue&&this._handleActiveTabs()})}setActiveTab(tabId){let tabsId=tabId.replace(/\.[0-9a-z]+$/,""),tabs=this.querySelector(`#${tabsId}`),tab=tabs.querySelector(`#${tabId}`);tabs&&tab&&(tabs.activeTab=tabId)}setActivePath(path){let parts=path.split("/"),tabId="";parts.forEach(part=>{this.setActiveTab(part),tabId+=part})}_convertField(field,conversion=this.fieldsConversion,settings={}){let fieldKeys=Object.keys(field||{}),convKeys=Object.keys(conversion||{}).filter(key=>fieldKeys.includes(key));return conversion.defaultSettings&&(settings=conversion.defaultSettings),convKeys.forEach(key=>{let val=field[key],convData=conversion?conversion[key]:void 0,convVal=convData?Array.isArray(val)?convData[val[0]]:convData[val]:void 0;convVal&&(settings=this._convertField(field,convVal,settings))}),settings}_fieldToSchema(field){let schema={};return Object.keys(field||{}).forEach(key=>{!field.inputMethod&&field.properties&&(field.inputMethod="object");let conversion=this._convertField(field);conversion.type&&(schema.type=conversion.type),conversion.format&&(schema.format=conversion.format),"pattern"===key?".*"!=field.validation&&(schema.pattern=field.validation):"properties"===key?"array"===conversion.type&&Array.isArray(field.properties)?schema.items={type:"object",properties:this.fieldsToSchema(field.properties)}:"array"===conversion.type?schema.items=this._fieldToSchema(field.properties):schema.properties=this.fieldsToSchema(field.properties):["items","inputMethod","property","properties","required","type","validation"].includes(key)||(schema[key]=field[key])}),schema}fieldsToSchema(fields){let schema={};return fields&&fields.forEach&&fields.forEach(field=>{let prop=field.property?field.property:"";schema[prop]=this._fieldToSchema(field)}),schema}_handleActiveTabs(){this.dispatchEvent(new CustomEvent("active-tabs-changed",{bubbles:!0,cancelable:!0,composed:!1,detail:this}))}_handleActiveTab(e){e&&e.detail&&e.detail.id&&(this.activeTabs[e.detail.id]=e.detail.activeTab)}}_exports.SimpleFields=SimpleFields,window.customElements.define(SimpleFields.tag,SimpleFields)}));