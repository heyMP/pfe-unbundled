define(["exports","../../../lit-element/lit-element.js"],(function(_exports,_litElement){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleFieldsContainer=void 0;class SimpleFieldsContainer extends _litElement.LitElement{static get tag(){return"simple-fields-container"}static get styles(){return[_litElement.css`
        :host {
          display: block;
          width: 100%;
          font-size: var(--simple-fields-detail-font-size, 12px);
          font-family: var(--simple-fields-detail-font-family, sans-serif);
          line-height: var(--simple-fields-detail-line-height, 22px);
          transition: color 0.3s ease-in-out;
          margin: var(--simple-fields-margin, 16px) 0;
        }
        :host([hidden]),
        :host([type="hidden"]) {
          display: none;
        }
        :host([error]) {
          color: var(--simple-fields-error-color, #dd2c00);
          transition: color 0.3s ease-in-out;
        }
        :host([disabled]) {
          color: var(--simple-fields-disabled-color, #999);
        }
        .field-main.inline,
        .field-main > div,
        #field-bottom {
          display: flex;
          align-items: stretch;
          justify-content: flex-start;
        }
        * {
          flex: 1 1 auto;
        }
        #fieldmeta {
          text-align: right;
        }
        :host .label-main:after {
          content: var(--simple-fields-label-flag, "");
        }
        :host(:focus-within) .label-main {
          color: var(--simple-fields-accent-color, #3f51b5);
          transition: color 0.3s ease-in-out;
        }
        .inline {
          --simple-fields-radio-option-display: flex;
          --simple-fields-radio-option-flex-wrap: wrap;
        }
        .inline label {
          margin: 0 var(--simple-fields-margin-small, 8px) 0 0;
          flex: 0 1 auto;
        }
        .inline label,
        .field-main > div,
        .field,
        ::slotted([slot="field"]) {
          font-size: var(--simple-fields-font-size, 16px);
          font-family: var(--simple-fields-font-family, sans-serif);
          line-height: var(--simple-fields-line-height, 22px);
        }
        .field,
        ::slotted([slot="field"]) {
          width: auto;
          border: none;
          color: var(--simple-fields-color, black);
          transition: opacity ease-in-out;
          flex: 1 0 auto;
        }
        ::slotted([slot="field"]:focus) {
          outline: none;
        }
        :host[inline] ::slotted([slot="field"]:focus),
        ::slotted([type="checkbox"][slot="radio"]:focus),
        ::slotted([type="checkbox"][slot="field"]:focus) {
          outline: unset;
        }
        .field-main.inline .field,
        .field-main.inline ::slotted([slot="field"]) {
          min-width: var(--simple-fields-detail-line-height, 22px);
          height: var(--simple-fields-detail-line-height, 22px);
          margin: 0 var(--simple-fields-margin-small, 8px) 0 0;
        }
        .field[disabled],
        :host([readonly]) ::slotted([slot="field"]) {
          opacity: var(--simple-fields-disabled-opacity, 0.7);
          transition: opacity ease-in-out;
        }
        .field[readonly],
        .field[disabled],
        :host([readonly]) ::slotted([slot="field"]),
        :host([disabled]) ::slotted([slot="field"]) {
          cursor: not-allowed;
        }
        .border-bottom {
          height: 0;
        }
        :host([disabled]) .border-bottom {
          border-bottom: 1px dashed var(--simple-fields-border-color, #999);
        }
        .border-bottom.blur {
          border-bottom: 1px solid var(--simple-fields-border-color, #999);
          width: 100%;
        }
        .border-bottom.focus {
          margin: -1px auto 0;
          width: 0;
          border-bottom: 2px solid var(--simple-fields-accent-color, #3f51b5);
          transition: width 0.5s ease-in-out;
        }
        :host(:focus-within) .border-bottom.focus {
          width: 100%;
          transition: width 0.5s ease-in-out;
        }
        :host([type="checkbox"]) .border-bottom,
        :host([type="color"]) .border-bottom,
        :host([type="file"]) .border-bottom,
        :host([type="radio"]) .border-bottom,
        :host([type="range"]) .border-bottom {
          display: none;
        }
        ::slotted(textarea[slot="field"]) {
          margin: 0;
          transition: height 0.5s ease-in-out;
          box-sizing: border-box;
          vertical-align: bottom;
        }
        ::slotted(fieldset[slot="field"]) {
          margin: 0;
          padding: 0;
          border: none;
          font-size: var(--simple-fields-font-size, 16px);
          font-family: var(--simple-fields-font-family, sans-serif);
          line-height: var(--simple-fields-line-height, 22px);
          display: var(--simple-fields-radio-option-display, block);
          flex-wrap: var(--simple-fields-radio-option-flex-wrap, wrap);
          transition: color 0.3s ease-in-out;
        }
      `]}render(){return _litElement.html`
      ${this.fieldMainTemplate} ${this.fieldBottom}
    `}static get properties(){return{autovalidate:{type:Boolean},counter:{type:String},description:{type:String},disabled:{type:Boolean,reflect:!0},defaultErrorMessage:{type:String},defaultRequiredMessage:{type:String},error:{type:Boolean,reflect:!0},errorMessage:{type:String},hidden:{type:Boolean,reflect:!0},field:{type:Object},id:{type:String,reflect:!0},inline:{type:Boolean,reflect:!0},label:{type:String},minchecked:{type:Number},maxchecked:{type:Number},maxwords:{type:Number},name:{type:String,reflect:!0},numberMessage:{type:String},pattern:{type:String},patternMessage:{type:String},prefix:{type:String},readonly:{type:Boolean,reflect:!0},required:{type:Boolean,reflect:!0},requiredMessage:{type:String},suffix:{type:String},type:{type:String},validTypes:{type:Array}}}constructor(){super(),this.counter="none",this.autovalidate=!1,this.disabled=!1,this.hidden=!1,this.error=!1,this.id=this._generateUUID(),this.inline=!1,this.validTypes=["checkbox","color","date","datetime-local","email","file","fieldset","hidden","month","number","password","radio","range","search","select","tel","text","textarea","time","url","week"],this._observeAndListen(),this.addEventListener("click",e=>this.focus())}disconnectedCallback(){this.removeEventListener("click",e=>this.focus()),super.disconnectedCallback()}autoGrow(field=this.field){this.field&&(this.field.style.height="auto",this.field.style.height=`${this.field.scrollHeight}px`,this.field.style.overflowY="hidden")}firstUpdated(){this._updateField()}updated(changedProperties){let errorChanged=!1;changedProperties.forEach((oldValue,propName)=>{"error"===propName&&this.error!==oldValue&&(errorChanged=!0),"errorMessage"===propName&&this.errorMessage!==oldValue&&(errorChanged=!0),"error"===propName&&this.field&&this.field.setAttribute("aria-invalid",this.error?"true":"false")}),errorChanged&&this._fireErrorChanged()}get descriptionTemplate(){return _litElement.html`
      <div id="description">
        <slot name="description"></slot>
        ${this.description}
      </div>
    `}get errorTemplate(){return _litElement.html`
      <div id="error-message" ?hidden="${!this.error}" role="alert">
        ${this.errorMessage}
      </div>
    `}get fieldBottom(){return _litElement.html`
      <div class="border-bottom blur"></div>
      <div class="border-bottom focus"></div>
      <div id="field-bottom">
        <div id="error-desc">
          ${this.descriptionTemplate} ${this.errorTemplate}
        </div>
        ${this.fieldMeta}
      </div>
    `}get fieldId(){return`${this.id||"field"}.input`}get fieldMainTemplate(){return _litElement.html`
      <div
        class="${this.inline||["checkbox","color","radio"].includes(this.type||"text")?"field-main inline":"field-main"}"
      >
        ${this.labelTemplate}
        <div>
          ${this.prefixTemplate}
          <slot name="field"></slot>
          ${this.suffixTemplate}
        </div>
      </div>
    `}get fieldMeta(){return _litElement.html`
      <div id="fieldmeta" aria-live="polite">
        <slot name="field-meta"></slot>
      </div>
    `}get labelTemplate(){return _litElement.html`
      <label
        for="${this.fieldId}"
        class="label-main"
        ?hidden="${"fieldset"===this.type}"
      >
        <slot name="label"></slot>
        ${this.label}${this.error||this.required?"*":""}
      </label>
    `}get numberError(){let multicheck="fieldset"===this.type&&this.field.querySelector("input[type=checkbox]"),items=!!this._getFieldValue()&&this._getFieldValue().length,min="select"===this.type?this.min:!!multicheck&&this.minchecked,max="select"===this.type?this.max:!!multicheck&&this.maxchecked;return max&&items&&max<items?max-items:!!(min&&items&&min>items)&&min-items}get numeric(){return["date","month","week","time","datetime-local","number","range"].includes(this.type)}get patternError(){return this.pattern&&""!==this.pattern&&this._getFieldValue()&&(this.field.multiple?this._getFieldValue().filter(value=>!value.match(this.pattern)):!this._getFieldValue().match(this.pattern))}get prefixTemplate(){return _litElement.html`
      <slot name="prefix"></slot>
      ${this.prefix}
    `}get requiredError(){return!this._getFieldValue()&&this.required}get slottedFieldObserver(){return new MutationObserver(this._updateField)}get suffixTemplate(){return _litElement.html`
      <slot name="suffix"></slot>
      ${this.suffix}
    `}focus(){this.field&&this.field.focus()}select(){!this.field||"text"!==this.type&&"textarea"!==this.type||this.field.select()}setRangeText(replacement,start,end,selectMode){!this.field||"text"!==this.type&&"textarea"!==this.type||this.field.setRangeText(replacement,start,end,selectMode)}setSelectionRange(selectionStart,selectionEnd,selectionDirection){!this.field||"text"!==this.type&&"textarea"!==this.type||this.field.setSelectionRange(selectionStart,selectionEnd,selectionDirection)}stepDown(n=1){this.field&&this.numeric&&this.field.stepDown()}stepUp(n=1){this.field&&this.numeric&&this.field.stepUp()}validate(){let legend=this.field.querySelector("legend");return this.requiredError?(this.error=!0,this.errorMessage=this.requiredMessage||"required"):this.numberError?(this.error=!0,this.errorMessage=this.numberMessage||(this.numberError>0?`select ${this.numberError} more`:`select ${0-this.numberError} fewer`)):this.patternError&&(this.error=!0,this.errorMessage=this.patternMessage||"invalid format"),"fieldset"===this.type&&legend&&(legend.innerHTML=legend.innerHTML.replace(/\**\s*$/,this.error?"*":""),legend.style.color=this.error?"var(--simple-fields-error-color, #dd2c00)":""),!this.error}_fireErrorChanged(){this.dispatchEvent(new CustomEvent("error-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_generateUUID(){return"ss-s-s-s-sss".replace(/s/g,Math.floor(65536*(1+Math.random())).toString(16).substring(1))}_getFieldValue(){let checked,value;return this.field&&("fieldset"===this.type&&this.field.querySelector("input[type=radio]")?(checked=this.field.querySelector("input:checked"),value=checked?checked.value:void 0):"fieldset"===this.type&&this.field.querySelector("input[type=checkbox]")?(value=[],checked=this.field.querySelectorAll("input:checked"),checked.forEach(input=>value.push(input.value))):value="checkbox"===this.type||"radio"===this.type?!!this.field.checked:"select"===this.type?this.multiple?Object.keys(this.field.selectedOptions).map(option=>this.field.selectedOptions[option].value):this.field.selectedOptions[0].value:this.field.value),value}_getValidType(type){return"datetime"===type&&this.validTypes.includes(type)?"datetime-local":this.validTypes.includes(type)?type:"text"}_handleFieldChange(){"text"!==this.type&&"textarea"!==this.type||this._updateCount(),this.autovalidate&&this.validate()}_observeAndListen(init=!0){init?(this.slottedFieldObserver.observe(this,{attributeFilter:["disabled","readonly","required","slot"],childlist:!0}),this._updateField(),this.addEventListener("click",this.focus),this.addEventListener("focusout",this._onFocusout),this.addEventListener("focusin",this._onFocusin)):(this.slottedFieldObserver.disconnect(),this.removeEventListener("click",this.focus),this.removeEventListener("focusout",this._onFocusout),this.removeEventListener("focusin",this._onFocusin))}_onFocusin(){this.error=!1}_onFocusout(){this.autovalidate&&this.validate()}_updateField(){let oldfield=this.field;if(this.field=this.querySelector&&this.querySelector("[slot=field]")?this.querySelector("[slot=field]"):void 0,this.id=`${this.fieldId||""}-wrapper`,this.field){let tag=this.field.tagName.toLowerCase(),type=this.field.getAttribute("type")||"text";if(this.type=this._getValidType("input"===tag?type:tag),this.required=this.field.required,this.disabled=this.field.disabled,this.readonly=this.field.readonly,this.field.setAttribute("aria-describedby","field-bottom"),this.field.addEventListener("change",e=>this._handleFieldChange()),this.field.addEventListener("input",e=>this._handleFieldChange()),"select"===this.type&&(this.multiple=this.field.multiple),"textarea"===this.type&&(this.field.getAttribute("rows")||this.field.setAttribute("rows",1),this.field.addEventListener("keydown",e=>e.stopPropagation())),"fieldset"===this.type){let legend=this.querySelector("legend");legend&&(legend.style.fontSize="var(--simple-fields-detail-font-size, 12px)",legend.style.fontFamily="var(--simple-fields-detail-font-family, sans-serif)",legend.style.lineHeight="var(--simple-fields-detail-line-height, 22px)",legend.style.paddingInlineStart=0,legend.style.paddingInlineEnd=0),this.querySelectorAll("label, input").forEach(el=>el.style.marginRight="var(--simple-fields-margin, 16px)"),this.querySelectorAll("label input").forEach(el=>el.style.marginLeft="calc(0 - var(--simple-fields-margin, 16px))")}}else this.disabled=!1,this.readonly=!1,this.required=!1,this.type=void 0,oldfield&&("textarea"===oldfield.tagName.toLowerCase()&&oldfield.addEventListener("keydown",e=>e.stopPropagation()),oldfield.removeEventListener("change",e=>this._handleFieldChange()),oldfield.removeEventListener("input",e=>this._handleFieldChange()))}_updateCount(){let count="",wordcounter=new RegExp("[\\w\\-\\']+","gim"),maxlength=this.field.getAttribute("maxlength")||this.maxlength||!1,maxword=this.maxwords||!1,countmax="word"===this.counter?maxword:maxlength,regex=new RegExp(`.{0,${maxlength||1}}`,"g"),wordregex=new RegExp(`([\\w\\-\\']+\\W*){0,${maxword||1}}`,"g"),length=()=>this.field.value?this.field.value.length:0,wordlength=()=>this.field.value&&this.field.value.match(wordcounter)?this.field.value.match(wordcounter).length:0,correctLength=(length,max,regex)=>{length&&max&&max<length&&this.field.value.match(regex)&&(this.field.value=this.field.value.match(regex)[0].trim())};correctLength(length(),maxlength,regex),correctLength(wordlength(),maxword,wordregex),count="word"===this.counter?wordlength():length(),"none"!==this.counter&&this.shadowRoot&&this.shadowRoot.querySelector("#fieldmeta")&&(this.shadowRoot.querySelector("#fieldmeta").innerHTML=countmax?`${count}/${countmax}`:count)}}_exports.SimpleFieldsContainer=SimpleFieldsContainer,window.customElements.define(SimpleFieldsContainer.tag,SimpleFieldsContainer)}));