define(["exports","require","./simple-login-avatar.js","./simple-login-camera.js","../../../@polymer/paper-icon-button/paper-icon-button.js","../../simple-tooltip/simple-tooltip.js"],(function(_exports,_require,_simpleLoginAvatar,_simpleLoginCamera,_paperIconButton,_simpleTooltip){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleCameraSnap=void 0,_require=babelHelpers.interopRequireWildcard(_require);class SimpleCameraSnap extends HTMLElement{constructor(delayRender=!1){super(),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/image-icons.js"],res,rej)),this.tag=SimpleCameraSnap.tag,this.template=document.createElement("template"),this.attachShadow({mode:"open"}),delayRender||this.render()}static get tag(){return"simple-camera-snap"}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}get html(){return'\n    <style>\n      :host {\n        /* style simple-login-camera according to simple-login-snap styles */\n        --simple-login-camera-background: var(--simple-camera-snap-color, #36bed4);\n        --simple-login-camera-error: var(--simple-camera-snap-error, red);\n        --simple-login-avatar-color: var(--simple-camera-snap-color, #36bed4);\n        --simple-login-camera-width: var(--simple-camera-snap-width, 200px);\n        --simple-login-camera-height: var(--simple-camera-snap-height, 200px);\n\n        /* style simple-login-avatar according to simple-login-snap styles */\n        --simple-login-avatar-background: var(--simple-camera-snap-background, white);\n        --simple-login-avatar-border-radius: var(--simple-camera-snap-border-radius,100%);\n        --simple-login-avatar-width: var(--simple-camera-snap-width, 200px);\n        --simple-login-avatar-height: var(--simple-camera-snap-height, 200px);\n      }\n      #selfie {\n        position: absolute;\n        margin: 0;\n        width: var(--simple-camera-snap-width, 200px);\n        height: var(--simple-camera-snap-height, 200px);\n        display: flex;\n        justify-content: center;\n      }\n      #snap {\n        color: var(--simple-camera-snap-color, #36bed4);\n        background-color: var(--simple-camera-snap-background, white);\n        border-radius: var(--simple-camera-snap-button-border-radius);\n        opacity: var(--simple-camera-snap-button-opacity);\n\n      }\n      .has-snap {\n        z-index: 3;\n      }\n      #selfie img {\n        z-index: 2;\n        position: absolute;\n        width: calc(var(--simple-camera-snap-height, 200px) * 16 / 9);\n        height: var(--simple-camera-snap-height, 200px);\n      }\n      .buttons {\n        display: flex;\n        width: var(--simple-camera-snap-width, 200px);\n        justify-content: space-evenly;\n        position: var(--simple-camera-snap-button-container-position);\n        bottom: var(--simple-camera-snap-button-container-bottom);\n        z-index: var(--simple-camera-snap-button-container-z-index);\n      }\n    </style>\n    <simple-login-avatar>\n      <div id="selfie"></div>\n      <simple-login-camera id="camera" autoplay></simple-login-camera>\n    </simple-login-avatar>\n    <div class="buttons">\n      <paper-icon-button id="snap" icon="image:camera-alt"></paper-icon-button>\n      <simple-tooltip for="snap">Take Photo</simple-tooltip>\n    </div>\n    '}connectedCallback(){navigator.mediaDevices||(this.shadowRoot.querySelector("#snap").style.display="none"),this.shadowRoot.querySelector("#snap").addEventListener("click",this.snapPhoto.bind(this))}disconnectedCallback(){this.shadowRoot.querySelector("#snap").removeEventListener("click",this.snapPhoto.bind(this))}async snapPhoto(e){const camera=this.shadowRoot.querySelector("#camera");if(camera.hasAttribute("autoplay")){let raw=await camera.takeASnap(),img=await camera.takeASnap().then(camera.renderImage);camera.removeAttribute("autoplay");const selfie=this.shadowRoot.querySelector("#selfie");selfie.innerHTML="",selfie.appendChild(img),this.dispatchEvent(new CustomEvent("simple-camera-snap-image",{bubbles:!0,composed:!0,cancelable:!0,detail:{img:img,raw:raw}})),selfie.classList.add("has-snap")}else this.clearPhoto(e)}clearPhoto(e){this.shadowRoot.querySelector("#camera").setAttribute("autoplay","autoplay");const selfie=this.shadowRoot.querySelector("#selfie");selfie.innerHTML="",selfie.classList.remove("has-snap")}}_exports.SimpleCameraSnap=SimpleCameraSnap,window.customElements.define(SimpleCameraSnap.tag,SimpleCameraSnap)}));