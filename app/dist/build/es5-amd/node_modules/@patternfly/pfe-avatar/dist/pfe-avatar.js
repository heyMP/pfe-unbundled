define(["exports","../../pfelement/dist/pfelement.js"],function(_exports,_pfelement){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;_pfelement=babelHelpers.interopRequireDefault(_pfelement);function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=babelHelpers.getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=babelHelpers.getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return babelHelpers.possibleConstructorReturn(this,result)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return!0}catch(e){return!1}}/**
 * djb2 string hashing function.
 *
 * @see http://www.cse.yorku.ca/~oz/hash.html
 * @param {String} str the string to hash.
 * @return {Number} a positive integer
 */function hash(str){var hash=5381,i=str.length;while(i){hash=33*hash^str.charCodeAt(--i)}return hash>>>0}function h2rgb(v1,v2,vH){if(0>vH)vH+=1;if(1<vH)vH-=1;if(1>6*vH)return v1+6*(v2-v1)*vH;if(1>2*vH)return v2;if(2>3*vH)return v1+6*((v2-v1)*(2/3-vH));return v1}/**
 * Convert an HSL color to RGB.
 *
 * @param {Number} H the hue component
 * @param {Number} S the saturation component
 * @param {Number} L the luminance component
 * @return {Array} [R, G, B]
 *
 * @see https://www.easyrgb.com/en/math.php
 */function hsl2rgb(_H,_S,_L){var R,G,B,H=Math.max(0,Math.min(1,_H)),S=Math.max(0,Math.min(1,_S)),L=Math.max(0,Math.min(1,_L));if(0==S){R=255*L;G=255*L;B=255*L}else{var a,b;if(.5>L){b=L*(1+S)}else{b=L+S-S*L}a=2*L-b;R=Math.floor(255*h2rgb(a,b,H+1/3));G=Math.floor(255*h2rgb(a,b,H));B=Math.floor(255*h2rgb(a,b,H-1/3))}return[R,G,B]}/**
 * Convert an RGBcolor to HSL.
 *
 * @param {Number} R the red component
 * @param {Number} G the green component
 * @param {Number} B the blue component
 * @return {Array} [H, S, L]
 *
 * @see https://www.easyrgb.com/en/math.php
 */function rgb2hsl(_R,_G,_B){var H,S,L,R=Math.max(0,Math.min(255,_R)),G=Math.max(0,Math.min(255,_G)),B=Math.max(0,Math.min(255,_B)),r=R/255,g=G/255,b=B/255,var_min=Math.min(Math.min(r,g),b),var_max=Math.max(Math.max(r,g),b),del_max=var_max-var_min;L=(var_max+var_min)/2;if(0===del_max){H=0;S=0}else{if(.5>L){S=del_max/(var_max+var_min)}else{S=del_max/(2-var_max-var_min)}var del_r=((var_max-r)/6+del_max/2)/del_max,del_g=((var_max-g)/6+del_max/2)/del_max,del_b=((var_max-b)/6+del_max/2)/del_max;if(r==var_max){H=del_b-del_g}else if(g==var_max){H=1/3+del_r-del_b}else if(b==var_max){H=2/3+del_g-del_r}if(0>H){H+=1}else if(1<H){H-=1}}return[H,S,L]}/*!
 * PatternFly Elements: PfeAvatar 1.0.0
 * @license
 * Copyright 2020 Red Hat, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
*/var PfeAvatar=/*#__PURE__*/function(_PFElement){babelHelpers.inherits(PfeAvatar,_PFElement);var _super=_createSuper(PfeAvatar);babelHelpers.createClass(PfeAvatar,[{key:"html",// Injected at build-time
get:function get(){return"\n<style>:host{display:block;position:relative;width:128px;width:var(--pfe-avatar--size,var(--pfe-avatar--width,128px));height:128px;height:var(--pfe-avatar--size,var(--pfe-avatar--width,128px))}:host canvas{width:100%;height:100%;image-rendering:optimizeSpeed;image-rendering:-moz-crisp-edges;image-rendering:-webkit-optimize-contrast;image-rendering:-o-crisp-edges;image-rendering:-o-pixelated;image-rendering:pixelated;-ms-interpolation-mode:nearest-neighbor}:host([shape=rounded]) canvas,:host([shape=rounded]) img{border-radius:calc(128px / 8 + 1px);border-radius:calc(var(--pfe-avatar--size,var(--pfe-avatar--width,128px))/ 8 + 1px)}:host([shape=circle]) canvas,:host([shape=circle]) img{border-radius:50%}:host([src]) canvas{display:none}:host([src]) img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}:host(:not([src])) img{display:none}:host([hidden]){display:none} /*# sourceMappingURL=pfe-avatar.min.css.map */</style>\n<canvas></canvas>\n<img>"}},{key:"templateUrl",get:function get(){return"pfe-avatar.html"}},{key:"styleUrl",get:function get(){return"pfe-avatar.scss"}},{key:"customColors",get:function get(){return this.cssVariable("pfe-avatar--colors")}}],[{key:"version",// Injected at build-time
get:function get(){return"1.0.0"}},{key:"tag",get:function get(){return"pfe-avatar"}},{key:"properties",get:function get(){return{name:{title:"Username",type:String,default:"",observer:"_updateWhenConnected"},src:{title:"Avatar image URL",type:String,observer:"_updateWhenConnected"},pattern:{title:"Shape pattern",type:String,default:PfeAvatar.patterns.squares,observer:"_updateWhenConnected"},// @TODO Deprecated pfe-name in 1.0
oldName:{alias:"name",attr:"pfe-name"},// @TODO Deprecated pfe-src in 1.0
oldSrc:{alias:"src",attr:"pfe-src"},// @TODO Deprecated pfe-pattern in 1.0
oldPattern:{alias:"pattern",attr:"pfe-pattern"}}}},{key:"events",get:function get(){return{connected:"".concat(this.tag,":connected")}}},{key:"patterns",get:function get(){return{triangles:"triangles",squares:"squares"}}},{key:"defaultSize",get:function get(){return 128}},{key:"defaultColors",get:function get(){return"#67accf #448087 #709c6b #a35252 #826cbb"}}]);function PfeAvatar(){var _this;babelHelpers.classCallCheck(this,PfeAvatar);_this=_super.call(this,PfeAvatar);_this._initCanvas=_this._initCanvas.bind(babelHelpers.assertThisInitialized(_this));return _this}babelHelpers.createClass(PfeAvatar,[{key:"connectedCallback",value:function connectedCallback(){// initCanvas comes before parent's connectedCallback because the
// connectedCallback sets attribute values, triggering, the observer
// functions, which require the canvas to already be initialized.
this._initCanvas();babelHelpers.get(babelHelpers.getPrototypeOf(PfeAvatar.prototype),"connectedCallback",this).call(this);this.emitEvent(PfeAvatar.events.connected,{bubbles:!1})}},{key:"_initCanvas",value:function _initCanvas(){this._canvas=this.shadowRoot.querySelector("canvas");var cssVarWidth=this.cssVariable("pfe-avatar--width"),size=cssVarWidth&&cssVarWidth.replace(/px$/,"")||PfeAvatar.defaultSize;this._canvas.width=size;this._canvas.height=size;this._squareSize=this._canvas.width/8;this._triangleSize=this._canvas.width/4;this._ctx=this._canvas.getContext("2d")}},{key:"_updateWhenConnected",value:function _updateWhenConnected(){var _this2=this;if(this.hasAttribute("pfelement")){this.update()}else{this.addEventListener(PfeAvatar.events.connected,function(){return _this2.update()})}}},{key:"update",value:function update(){// if we have a src element, update the img, otherwise update the random pattern
if(this.src){this.shadowRoot.querySelector("img").src=this.src}else{var bitPattern=hash(this.name).toString(2),arrPattern=bitPattern.split("").map(function(n){return+n});this._colorIndex=Math.floor(PfeAvatar.colors.length*parseInt(bitPattern,2)/Math.pow(2,32));this.color1=PfeAvatar.colors[this._colorIndex].color1;this.color2=PfeAvatar.colors[this._colorIndex].color2;this._clear();this._drawBackground();if(this.pattern===PfeAvatar.patterns.squares){this._drawSquarePattern(arrPattern)}else if(this.pattern===PfeAvatar.patterns.triangles){this._drawTrianglePattern(arrPattern)}// this._drawGradient();
}}},{key:"_clear",value:function _clear(){this._ctx.clearRect(0,0,this._canvas.width,this._canvas.height)}},{key:"_drawBackground",value:function _drawBackground(){this._ctx.fillStyle=this.color1;this._ctx.fillRect(0,0,this._canvas.width,this._canvas.height)}},{key:"_drawSquarePattern",value:function _drawSquarePattern(pattern){this._ctx.fillStyle=this.color2;if(this._ctx){var i=pattern.length;while(i--){if(pattern[i]){this._drawMirroredSquare(i%4,Math.floor(i/4))}}}}/**
   * Draw a square at the given position, mirrored onto both the left and right half of the canvas.
   */},{key:"_drawMirroredSquare",value:function _drawMirroredSquare(x,y){if(this._ctx){this._drawSquare(x,y);this._drawSquare(7-x,y)}}},{key:"_drawSquare",value:function _drawSquare(x,y){this._ctx.fillRect(this._squareSize*x,this._squareSize*y,this._squareSize,this._squareSize)}},{key:"_drawTrianglePattern",value:function _drawTrianglePattern(pattern){this._ctx.fillStyle=this.color2;if(this._ctx){var i=pattern.length;while(i--){if(pattern[i]){var x=Math.floor(i/2)%2,y=Math.floor(i/4),alt=i%4,p1=[x,y],p2=[x,y],p3=[x,y];switch(alt){case 0:p2[1]++;p3[0]++;p3[1]++;break;case 1:p2[0]++;p3[0]++;p3[1]++;break;case 2:p2[0]++;p3[1]++;break;case 3:p1[0]++;p2[0]++;p2[1]++;p3[1]++;break;}this._drawMirroredTriangle(p1,p2,p3)}}}}/**
   * Draw a square at the given position in the top-left quadrant of the
   * canvas, and mirrored to the other three quadrants.
   */},{key:"_drawMirroredTriangle",value:function _drawMirroredTriangle(p1,p2,p3){if(this._ctx){this._drawTriangle(p1,p2,p3);this._drawTriangle([4-p1[0],p1[1]],[4-p2[0],p2[1]],[4-p3[0],p3[1]])}}},{key:"_drawTriangle",value:function _drawTriangle(p1,p2,p3){var _this$_ctx,_this3=this,_this$_ctx2,_this$_ctx3;this._ctx.beginPath();(_this$_ctx=this._ctx).moveTo.apply(_this$_ctx,babelHelpers.toConsumableArray(p1.map(function(c){return c*_this3._triangleSize})));(_this$_ctx2=this._ctx).lineTo.apply(_this$_ctx2,babelHelpers.toConsumableArray(p2.map(function(c){return c*_this3._triangleSize})));(_this$_ctx3=this._ctx).lineTo.apply(_this$_ctx3,babelHelpers.toConsumableArray(p3.map(function(c){return c*_this3._triangleSize})));this._ctx.closePath();this._ctx.fill();this._ctx.fill()}},{key:"_drawGradient",value:function _drawGradient(){var gradient=this._ctx.createLinearGradient(0,this._canvas.height,this._canvas.width,0),color=this.color2,gradientColor1=color,gradientColor2=color;if(/^#[A-f0-9]{3}$/.test(color)){// color is of the form "#fff"
gradientColor1+="c";gradientColor2+="0"}else if(/^#[A-f0-9]{6}$/.test(color)){// color is of the form "#ffffff"
gradientColor1+="cc";gradientColor2+="00"}gradient.addColorStop(0,gradientColor1);gradient.addColorStop(1,gradientColor2);gradient.addColorStop(1,gradientColor1);this._ctx.fillStyle=gradient;this._ctx.fillRect(0,0,this._canvas.width,this._canvas.height)}}],[{key:"_registerColors",value:function _registerColors(){var _this4=this;this.colors=[];var contextColors=this.customColors||this.defaultColors;contextColors.split(/\s+/).forEach(function(colorCode){var pattern;switch(colorCode.length){case 4:// ex: "#0fc"
pattern=/^#([A-f0-9])([A-f0-9])([A-f0-9])$/.exec(colorCode);if(pattern){pattern.shift();var color=pattern.map(function(c){return parseInt(c+c,16)});_this4._registerColor(color)}else{_this4.log("[pfe-avatar] invalid color ".concat(colorCode))}break;case 7:// ex: "#00ffcc"
pattern=/^#([A-f0-9]{2})([A-f0-9]{2})([A-f0-9]{2})$/.exec(colorCode);if(pattern){pattern.shift();var _color=pattern.map(function(c){return parseInt(c,16)});_this4._registerColor(_color)}else{_this4.log("[pfe-avatar] invalid color ".concat(colorCode))}}});return this.colors}},{key:"_registerColor",value:function _registerColor(color){PfeAvatar.colors.push({color1:"rgb(".concat(color.join(","),")"),color2:"rgb(".concat(this._adjustColor(color).join(","),")")})}},{key:"_adjustColor",value:function _adjustColor(color){var dark=.1,l_adj=.1,hsl=rgb2hsl.apply(void 0,babelHelpers.toConsumableArray(color));// if luminance is too dark already, then lighten the alternate color
// instead of darkening it.
hsl[2]+=hsl[2]>dark?-l_adj:l_adj;return hsl2rgb.apply(void 0,babelHelpers.toConsumableArray(hsl))}}]);return PfeAvatar}(_pfelement.default);PfeAvatar._registerColors();_pfelement.default.create(PfeAvatar);var _default=PfeAvatar;_exports.default=_default});