define(["exports","../../pfelement/dist/pfelement.js"],function(_exports,_pfelement){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;_pfelement=babelHelpers.interopRequireDefault(_pfelement);function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=babelHelpers.getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=babelHelpers.getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return babelHelpers.possibleConstructorReturn(this,result)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return!0}catch(e){return!1}}var PfeIconSet=/*#__PURE__*/function(){babelHelpers.createClass(PfeIconSet,[{key:"resolveIconName",/**
   * Run the icon set's name resolver to turn an icon name into an icon path, id, etc.
   */value:function resolveIconName(iconName){return this._resolveIconName(iconName,this.name,this.path)}/**
   * Create a new icon set.  Icon sets have a name (ie, a namespace).  For
   * example, an icon with a name of "rh-logo" represents a "logo" icon from the
   * "rh" set.  Icon set names are always separated from the rest of the icon
   * name with a hyphen `-`.  This means that set names cannot contain a hyphen.
   *
   * @param {String} name the namespace of the icon set
   * @param {String} path the web-accessible path to the icon set (for instance, a CDN)
   * @param {Function} resolveIconName an optional function to combine the path and an icon name into a final path.  The function will be passed the namespaced icon name (for example, "rh-api" where rh is the namespace and api is the individual icon's name)
   * @returns {Object} an object with the status of the icon set installation, such as `{ result: true, text: 'icon set installed' }` or `{ result: false, text: 'icon set is already installed' }`
   */}]);function PfeIconSet(name,path,resolveIconName){babelHelpers.classCallCheck(this,PfeIconSet);this.name=name;this.path=path;this._resolveIconName=resolveIconName}return PfeIconSet}();/**
 * An 'init' function to add the PFE built-in icon sets to the current page.
 */function addBuiltIns(PfeIcon){[{name:"web",path:"https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs"},{name:"rh",path:"https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs"}].forEach(function(set){return PfeIcon.addIconSet(set.name,set.path,function(name,iconSetName,iconSetPath){var regex=new RegExp("^".concat(iconSetName,"(-icon)?-(.*)")),_regex$exec=regex.exec(name),_regex$exec2=babelHelpers.slicedToArray(_regex$exec,3),iconName=_regex$exec2[2],iconId="".concat(iconSetName,"-icon-").concat(iconName),iconPath="".concat(iconSetPath,"/").concat(iconId,".svg");return iconPath})})}/*!
 * PatternFly Elements: PfeIcon 1.0.0
 * @license
 * Copyright 2020 Red Hat, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
*/ /**
 * Sets the id attribute on the <filter> element and points the CSS `filter` at that id.
 */function _setRandomFilterId(el){var randomId="filter-"+Math.random().toString().slice(2,10);// set the CSS filter property to point at the given id
el.shadowRoot.querySelector("svg image").style.filter="url(#".concat(randomId,")");// set the id attribute on the SVG filter element to match
el.shadowRoot.querySelector("svg filter").setAttribute("id",randomId)}var PfeIcon=/*#__PURE__*/function(_PFElement){babelHelpers.inherits(PfeIcon,_PFElement);var _super=_createSuper(PfeIcon);babelHelpers.createClass(PfeIcon,[{key:"_iconLoad",value:function _iconLoad(){this.classList.remove("load-failed")}},{key:"_iconLoadError",value:function _iconLoadError(e){this.classList.add("load-failed");if(this.hasLightDOM())this.classList.add("has-fallback")}},{key:"_colorChanged",value:function _colorChanged(){// Update the context
this.resetContext()}},{key:"html",// Injected at build-time
get:function get(){return"\n<style>@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host{color:#151515!important}}:host([on=dark]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host([on=saturated]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host([on=light]){--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}:host{--context:var(--pfe-icon--context, light);position:relative;display:inline-block;max-width:calc(1em + 0 * 2);max-width:calc(var(--pfe-icon--size,var(--pfe-theme--icon-size,1em)) + var(--pfe-icon--Padding,0) * 2);width:-webkit-fit-content!important;width:-moz-fit-content!important;width:fit-content!important;max-height:calc(1em + 0 * 2);max-height:calc(var(--pfe-icon--size,var(--pfe-theme--icon-size,1em)) + var(--pfe-icon--Padding,0) * 2);height:-webkit-fit-content!important;height:-moz-fit-content!important;height:fit-content!important;line-height:0}:host([block]){display:block;margin-bottom:16px;margin-bottom:var(--pfe-icon--spacing,var(--pfe-theme--container-spacer,16px));margin-top:16px;margin-top:var(--pfe-icon--spacing,var(--pfe-theme--container-spacer,16px))}:host([block]):first-child{margin-top:0}:host svg{width:1em;width:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em));height:1em;height:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em))}:host(:not(.load-failed)){vertical-align:middle;border-radius:50%;background-color:transparent;background-color:var(--pfe-icon--BackgroundColor,transparent);border:0 solid transparent;border:var(--pfe-icon--BorderWidth,0) var(--pfe-theme--ui--border-style,solid) var(--pfe-icon--BorderColor,var(--pfe-icon--color,transparent));padding:0;padding:var(--pfe-icon--Padding,0)}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host(:not(.load-failed)){background-color:#fff!important}:host(:not(.load-failed)) svg filter feFlood{flood-color:#000!important}}@supports (-ms-accelerator:true){:host(:not(.load-failed)){background-color:#fff!important}:host(:not(.load-failed)) svg filter feFlood{flood-color:#000!important}}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host(:not(.load-failed)) svg image{-webkit-filter:none;filter:none}}:host(:not(.load-failed)) filter feFlood{flood-color:#3c3f42;flood-color:var(--pfe-icon--Color,var(--pfe-icon--color,var(--pfe-broadcasted--text,#3c3f42)))}:host(:not(.load-failed)) .pfe-icon--fallback{display:none}:host([size=\"2x\"]){--pfe-icon--size:2em}:host([size=\"3x\"]){--pfe-icon--size:3em}:host([size=\"4x\"]){--pfe-icon--size:4em}:host([size=xl]){--pfe-icon--size:100px}:host([size=lg]){--pfe-icon--size:64px}:host([size=md]){--pfe-icon--size:32px}:host([size=sm]){--pfe-icon--size:14px}:host([color=critical]){--pfe-icon--color:var(--pfe-theme--color--feedback--critical, #a30000);--pfe-icon--context:dark}:host([color=important]){--pfe-icon--color:var(--pfe-theme--color--feedback--important, #d73401);--pfe-icon--context:dark}:host([color=moderate]){--pfe-icon--color:var(--pfe-theme--color--feedback--moderate, #ffc024)}:host([color=success]){--pfe-icon--color:var(--pfe-theme--color--feedback--success, #2e7d32);--pfe-icon--context:dark}:host([color=info]){--pfe-icon--color:var(--pfe-theme--color--feedback--info, #0277bd);--pfe-icon--context:dark}:host([color=default]){--pfe-icon--color:var(--pfe-theme--color--feedback--default, #4f5255);--pfe-icon--context:dark}:host([color=lightest]){--pfe-icon--color:var(--pfe-theme--color--surface--lightest, #fff);--pfe-icon--context:var(--pfe-theme--color--surface--lightest--context, light)}:host([color=base]){--pfe-icon--color:var(--pfe-theme--color--surface--base, #f0f0f0);--pfe-icon--context:var(--pfe-theme--color--surface--base--context, light)}:host([color=darker]){--pfe-icon--color:var(--pfe-theme--color--surface--darker, #3c3f42);--pfe-icon--context:var(--pfe-theme--color--surface--darker--context, dark)}:host([color=darkest]){--pfe-icon--color:var(--pfe-theme--color--surface--darkest, #151515);--pfe-icon--context:var(--pfe-theme--color--surface--darkest--context, dark)}:host([color=complement]){--pfe-icon--color:var(--pfe-theme--color--surface--complement, #002952);--pfe-icon--context:var(--pfe-theme--color--surface--complement--context, saturated)}:host([color=accent]){--pfe-icon--color:var(--pfe-theme--color--surface--accent, #004080);--pfe-icon--context:var(--pfe-theme--color--surface--accent--context, saturated)}:host([circled]:not([circled=false])){--pfe-icon--BackgroundColor:var(--pfe-icon--color, var(--pfe-theme--color--surface--lightest, #fff));--pfe-icon--Color:var(--pfe-broadcasted--text, #3c3f42);--pfe-icon--Padding:.5em;--pfe-icon--BorderWidth:var(--pfe-theme--ui--border-width, 1px);--pfe-icon--BorderColor:var(--pfe-icon--color, var(--pfe-theme--color--surface--border, #d2d2d2))}:host(.load-failed) svg image{display:none}:host(.load-failed.has-fallback) svg,:host(.load-failed[on-fail=collapse]) svg{display:none}:host(.load-failed[on-fail=collapse]){--pfe-icon--size:0} /*# sourceMappingURL=pfe-icon.min.css.map */</style>\n<div class=\"pfe-icon--fallback\">\n  <slot></slot>\n</div>\n<svg xmlns=\"http://www.w3.org/2000/svg\">\n  <filter color-interpolation-filters=\"sRGB\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\">\n    <feFlood result=\"COLOR\" />\n    <feComposite operator=\"in\" in=\"COLOR\" in2=\"SourceAlpha\" />\n  </filter>\n  <image xlink:href=\"\" width=\"100%\" height=\"100%\"></image>\n</svg>"}// @TODO: Deprecating in 1.0 release
// Injected at build-time
},{key:"templateUrl",get:function get(){return"pfe-icon.html"}},{key:"styleUrl",get:function get(){return"pfe-icon.scss"}},{key:"schemaUrl",get:function get(){return"pfe-icon.json"}// Declare the type of this component
},{key:"upgraded",get:function get(){return this.image.hasAttribute("xlink:href")}}],[{key:"version",// Injected at build-time
get:function get(){return"1.0.0"}},{key:"schemaProperties",get:function get(){return{icon:{title:"Icon",type:"string",prefixed:!1},size:{title:"Size",type:"string",enum:["xl","lg","md","sm","2x","3x","4x"],prefixed:!0},color:{title:"Color",type:"string",enum:["complement","accent","lightest","base","darker","darkest","critical","important","moderate","success","info"],prefixed:!0},circled:{title:"Circled",type:"boolean",default:!1,prefixed:!0}}}},{key:"tag",get:function get(){return"pfe-icon"}},{key:"PfeType",get:function get(){return _pfelement.default.PfeTypes.Content}},{key:"properties",get:function get(){return{icon:{type:String,observer:"updateIcon",prefix:!1},size:{type:String,values:["xl","lg","md","sm","1x","2x","3x","4x"],default:"1x"},color:{type:String,values:["complement","accent","lightest","base","darker","darkest","critical","important","moderate","success","info"],observer:"_colorChanged"},onFail:{type:String,values:["collapse"]},circled:{type:Boolean},block:{type:Boolean},// TODO: Deprecated for 1.0
oldColor:{type:String,alias:"color",attr:"pfe-color"},// TODO: Deprecated for 1.0
oldSize:{type:String,alias:"size",attr:"pfe-size"},// TODO: Deprecated for 1.0
oldCircled:{type:Boolean,alias:"circled",attr:"pfe-circled"},// TODO: Deprecated for 1.0
oldBlock:{type:Boolean,alias:"block",attr:"data-block"}}}},{key:"EVENTS",get:function get(){return{ADD_ICON_SET:"".concat(this.tag,":add-icon-set")}}}]);function PfeIcon(){var _this;babelHelpers.classCallCheck(this,PfeIcon);_this=_super.call(this,PfeIcon,{type:PfeIcon.PfeType});_this._iconLoad=_this._iconLoad.bind(babelHelpers.assertThisInitialized(_this));_this._iconLoadError=_this._iconLoadError.bind(babelHelpers.assertThisInitialized(_this));_this.image=_this.shadowRoot.querySelector("svg image");if(_this.image){_this.image.addEventListener("load",_this._iconLoad);_this.image.addEventListener("error",_this._iconLoadError)}// Attach a listener for the registration of an icon set
// Leaving this attached allows for the registered set to be updated
document.body.addEventListener(PfeIcon.EVENTS.ADD_ICON_SET,function(){return _this.updateIcon()});return _this}babelHelpers.createClass(PfeIcon,[{key:"disconnectedCallback",value:function disconnectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(PfeIcon.prototype),"disconnectedCallback",this).call(this);if(this.image){this.image.removeEventListener("load",this._iconLoad);this.image.removeEventListener("error",this._iconLoadError)}}},{key:"updateIcon",value:function updateIcon(){var _PfeIcon$getIconSet=PfeIcon.getIconSet(this.icon),set=_PfeIcon$getIconSet.set;if(set){var iconPath=set.resolveIconName(this.icon);this.image.setAttribute("xlink:href",iconPath);_setRandomFilterId(this)}}/**
   * Get an icon set by providing the set's name, _or_ the name of an icon from that set.
   *
   * @param {String} iconName the name of the set, or the name of an icon from that set.
   * @return {PfeIconSet} the icon set
   */}],[{key:"getIconSet",value:function getIconSet(iconName){var set;if(iconName){var _iconName$split=iconName.split("-"),_iconName$split2=babelHelpers.slicedToArray(_iconName$split,1),setName=_iconName$split2[0];set=this._iconSets[setName]}return{set:set}}},{key:"addIconSet",value:function addIconSet(name,path,resolveIconName){var resolveFunction;if("function"===typeof resolveIconName){resolveFunction=resolveIconName}else if("undefined"===typeof resolveIconName&&this._iconSets[name]&&"function"===typeof this._iconSets[name]._resolveIconName){resolveFunction=this._iconSets[name]._resolveIconName}else if("function"!==typeof resolveIconName&&"undefined"!==typeof resolveIconName){PfeIcon.warn("[".concat(this.tag,"]: The third input to addIconSet should be a function that parses and returns the icon's filename."))}else{PfeIcon.warn("[".concat(this.tag,"]: The set ").concat(name," needs a resolve function for the icon names."))}// Register the icon set and set up the event indicating the change
this._iconSets[name]=new PfeIconSet(name,path,resolveFunction);document.body.dispatchEvent(new CustomEvent(this.EVENTS.ADD_ICON_SET,{bubbles:!1,detail:{set:this._iconSets[name]}}))}}]);return PfeIcon}(_pfelement.default);PfeIcon._iconSets={};addBuiltIns(PfeIcon);_pfelement.default.create(PfeIcon);var _default=PfeIcon;_exports.default=_default});